Production-Ready Deployment for www.onedollaragent.ai

Context:
We are moving from Replit preview/testing to production deployment on www.onedollaragent.ai.

Currently:

Production enforcement (Redis-only, strict CORS) is active.

Development/testing environments (Replit, localhost) are being forced into production mode incorrectly.

Redis memory fallbacks are disabled, causing startup errors in dev/testing.

Stripe integration is functional but requires live keys and webhook idempotency service.

Objective:
Deploy a fully production-ready, secure, and cash-ready system while keeping local/dev testing functional.

1️⃣ Environment Detection Logic

Rules:

Explicit NODE_ENV wins:

If NODE_ENV=development, app runs in development mode, regardless of FRONTEND_URL or Replit variables.

Auto-detection triggers production mode only when:

REPLIT_DEPLOYMENT_ID exists OR

FRONTEND_URL matches production domain AND NODE_ENV is not explicitly development.

Environment-specific behavior:

Development:

Memory fallback for Redis allowed

Flexible CORS

No strict startup failures

Production:

Redis-only enforcement

Strict CORS (lock to production domains)

Enforce HTTPS

Enforce live Stripe keys

Startup fails if Redis missing

2️⃣ Redis Enforcement & Idempotency

Problem: Production startup fails because Redis is required and memory fallback is disabled.

Solution:

Activate Redis for:

Sessions

Rate limiting

Stripe webhook idempotency

Set environment variable:

REDIS_URL=redis://redis.railway.internal:6379


Ensure production-grade enforcement:

No memory fallback in production

Startup aborts if Redis unavailable

Development Safety:

Dev/local testing allows memory fallback, avoids Redis errors

3️⃣ Stripe Production Configuration

Environment Variables:

STRIPE_SECRET_KEY=sk_live_XXXXXXXXXXXXX
STRIPE_WEBHOOK_SECRET=whsec_XXXXXXXXXXXXX
FRONTEND_URL=https://www.onedollaragent.ai
ALLOWED_ORIGINS=https://onedollaragent.ai,https://www.onedollaragent.ai
SESSION_SECRET=superlongrandomsecuresecret
NODE_ENV=production


Requirements:

Live Stripe keys verified

Webhook endpoints functional:

https://www.onedollaragent.ai/api/stripe/webhook


Idempotency handled via Redis

4️⃣ CORS & Security Hardening

Lock CORS to production domains only:

https://onedollaragent.ai
https://www.onedollaragent.ai


Enforce HTTPS on production domains

Remove all Replit/preview origins from CORS

Redis-backed sessions, no MemoryStore in production

5️⃣ Deployment Considerations

Railway Deployment: Use Redis addon

VPS Deployment: Ensure Redis accessible via REDIS_URL

Docker / NGINX reverse proxy ready

PM2 or similar process management for uptime

Stripe live payments and webhook idempotency fully functional

6️⃣ Expected Outcome

Replit preview/testing works normally without Redis errors

Production deployment:

Redis-only persistence enforced

Stripe payments $1 working reliably

Sessions and webhook idempotency persistent across restarts

CORS locked to production domains

Developers can test locally without modifying FRONTEND_URL

7️⃣ Optional: Dev/Prod Safe Code Snippet

Implement in server/env-config.ts (example):

export const isProduction = (): boolean => {
  const explicitNodeEnv = process.env.NODE_ENV;
  const frontendUrl = process.env.FRONTEND_URL || '';
  const replId = process.env.REPLIT_DEPLOYMENT_ID;

  // Explicit NODE_ENV=development always wins
  if (explicitNodeEnv === 'development') return false;

  // Auto-detection triggers production only if REPLIT_DEPLOYMENT_ID exists
  // or FRONTEND_URL matches production domain
  const productionDomains = ['www.onedollaragent.ai', 'onedollaragent.ai'];
  const isProdDomain = productionDomains.some(domain => frontendUrl.includes(domain));

  return !!replId || (isProdDomain && explicitNodeEnv !== 'development');
};


🛠 Prompt for AI Dev:

Implement the above elite environment detection logic, fully enforce Redis-only operation for production, lock CORS to production domains, and configure live Stripe keys and webhook idempotency.

Ensure development/local environments remain functional without Redis or production enforcement.

Validate startup, Stripe payment flow, session persistence, and webhook idempotency for production deployment on www.onedollaragent.ai
.