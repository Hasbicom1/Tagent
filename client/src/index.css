/* Pixel Font Import */
@import url('https://fonts.googleapis.com/css2?family=Courier+Prime:ital,wght@0,400;0,700;1,400;1,700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Custom pixel font variables */
:root {
  --font-sans: 'Courier Prime', 'Courier New', Monaco, 'Lucida Console', monospace;
  --font-serif: 'Courier Prime', 'Courier New', Monaco, 'Lucida Console', monospace;  
  --font-mono: 'Courier Prime', 'Courier New', Monaco, 'Lucida Console', monospace;
}

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 98%;

  --foreground: 220 15% 8%;

  --border: 220 13% 91%;

  --card: 0 0% 99%;

  --card-foreground: 220 15% 12%;

  --card-border: 220 13% 87%;

  --sidebar: 220 8% 95%;

  --sidebar-foreground: 220 15% 12%;

  --sidebar-border: 220 13% 89%;

  --sidebar-primary: 210 50% 45%;

  --sidebar-primary-foreground: 0 0% 98%;

  --sidebar-accent: 220 10% 89%;

  --sidebar-accent-foreground: 220 15% 12%;

  --sidebar-ring: 210 50% 45%;

  --popover: 0 0% 97%;

  --popover-foreground: 220 15% 12%;

  --popover-border: 220 13% 85%;

  --primary: 210 100% 65%;

  --primary-foreground: 0 0% 98%;

  --secondary: 220 8% 92%;

  --secondary-foreground: 220 15% 12%;

  --muted: 220 8% 94%;

  --muted-foreground: 220 10% 45%;

  --accent: 220 10% 93%;

  --accent-foreground: 220 15% 15%;

  --destructive: 0 72% 51%;

  --destructive-foreground: 0 0% 98%;

  --input: 220 13% 80%;
  --ring: 210 50% 45%;
  --chart-1: 210 60% 35%;
  --chart-2: 142 69% 45%;
  --chart-3: 45 85% 50%;
  --chart-4: 280 55% 45%;
  --chart-5: 15 75% 50%;

  --font-sans: Inter, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: JetBrains Mono, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 1px 2px 0px hsl(220 43% 11% / 0.03);
  --shadow-xs: 0px 1px 2px 0px hsl(220 43% 11% / 0.05);
  --shadow-sm: 0px 1px 3px 0px hsl(220 43% 11% / 0.1), 0px 1px 2px -1px hsl(220 43% 11% / 0.1);
  --shadow: 0px 4px 6px -1px hsl(220 43% 11% / 0.1), 0px 2px 4px -2px hsl(220 43% 11% / 0.1);
  --shadow-md: 0px 10px 15px -3px hsl(220 43% 11% / 0.1), 0px 4px 6px -4px hsl(220 43% 11% / 0.1);
  --shadow-lg: 0px 20px 25px -5px hsl(220 43% 11% / 0.1), 0px 8px 10px -6px hsl(220 43% 11% / 0.1);
  --shadow-xl: 0px 25px 50px -12px hsl(220 43% 11% / 0.25);
  --shadow-2xl: 0px 50px 100px -20px hsl(220 43% 11% / 0.25);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0, 255, 65, .08);
  --elevate-2: rgba(0, 255, 65, .15);

  /* Terminal CRT Colors */
  --background: 0 0% 4%; /* Deep black like old CRT */
  --foreground: 120 100% 80%; /* Bright green phosphor */

  --border: 120 50% 25%; /* Dark green borders */
  --card: 0 0% 8%; /* Slightly lighter black for cards */
  --card-foreground: 120 100% 75%;
  --card-border: 120 40% 30%;

  --sidebar: 0 0% 6%;
  --sidebar-foreground: 120 100% 75%;
  --sidebar-border: 120 30% 35%;
  --sidebar-primary: 180 100% 50%; /* Electric cyan */
  --sidebar-primary-foreground: 0 0% 8%;
  --sidebar-accent: 120 20% 15%;
  --sidebar-accent-foreground: 120 100% 70%;
  --sidebar-ring: 180 100% 50%;

  --popover: 0 0% 10%;
  --popover-foreground: 120 100% 75%;
  --popover-border: 120 40% 25%;

  /* Electric blue primary */
  --primary: 210 100% 65%;
  --primary-foreground: 0 0% 8%;

  --secondary: 120 20% 20%;
  --secondary-foreground: 120 100% 70%;

  --muted: 120 15% 12%;
  --muted-foreground: 120 30% 60%;

  --accent: 180 100% 50%; /* Bright cyan accents */
  --accent-foreground: 0 0% 8%;

  --destructive: 0 85% 60%; /* Bright red for errors */
  --destructive-foreground: 0 0% 98%;

  --input: 120 40% 15%;
  --ring: 180 100% 50%; /* Cyan focus rings */
  --chart-1: 180 100% 60%;
  --chart-2: 120 100% 60%;
  --chart-3: 45 100% 60%;
  --chart-4: 280 80% 60%;
  --chart-5: 15 100% 60%;

  /* Enhanced shadows with green glow */
  --shadow-2xs: 0px 1px 2px 0px hsl(120 50% 20% / 0.2);
  --shadow-xs: 0px 1px 2px 0px hsl(120 50% 20% / 0.3);
  --shadow-sm: 0px 1px 3px 0px hsl(120 50% 20% / 0.4), 0px 1px 2px -1px hsl(120 50% 20% / 0.4);
  --shadow: 0px 4px 6px -1px hsl(120 50% 20% / 0.4), 0px 2px 4px -2px hsl(120 50% 20% / 0.4);
  --shadow-md: 0px 10px 15px -3px hsl(120 50% 20% / 0.4), 0px 4px 6px -4px hsl(120 50% 20% / 0.4);
  --shadow-lg: 0px 20px 25px -5px hsl(120 50% 20% / 0.4), 0px 8px 10px -6px hsl(120 50% 20% / 0.4);
  --shadow-xl: 0px 25px 50px -12px hsl(120 50% 20% / 0.5);
  --shadow-2xl: 0px 50px 100px -20px hsl(120 50% 20% / 0.5);

}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Pixel text styling for retro terminal aesthetic */
  .pixel-text {
    font-family: 'Courier Prime', 'Courier New', Monaco, 'Lucida Console', monospace;
    font-weight: 400;
    letter-spacing: 0.05em;
    text-rendering: optimizeSpeed;
    -webkit-font-smoothing: none;
    -moz-osx-font-smoothing: grayscale;
    font-variant-ligatures: none;
  }

  /* Enhanced pixel styling for headers */
  .pixel-header {
    font-family: 'Courier Prime', 'Courier New', Monaco, 'Lucida Console', monospace;
    font-weight: 700;
    letter-spacing: 0.1em;
    text-rendering: optimizeSpeed;
    -webkit-font-smoothing: none;
    -moz-osx-font-smoothing: grayscale;
    text-transform: uppercase;
  }

  /* Apply pixel styling globally */
  * {
    font-family: 'Courier Prime', 'Courier New', Monaco, 'Lucida Console', monospace !important;
    -webkit-font-smoothing: none;
    -moz-osx-font-smoothing: grayscale;
  }

  /* CRT Terminal Effects */
  .crt-screen {
    position: relative;
    background: linear-gradient(180deg, #0a0a0a 0%, #1a1a1a 100%);
    box-shadow: 
      inset 0 0 100px rgba(0, 255, 0, 0.1),
      0 0 20px rgba(0, 255, 0, 0.2),
      0 0 40px rgba(0, 255, 0, 0.1);
    border: 2px solid #333;
    border-radius: 8px;
  }

  .crt-screen::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
      repeating-linear-gradient(
        0deg,
        transparent,
        transparent 2px,
        rgba(0, 255, 0, 0.03) 2px,
        rgba(0, 255, 0, 0.03) 4px
      );
    pointer-events: none;
    z-index: 1;
  }

  .crt-screen::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(ellipse at center, transparent 60%, rgba(0, 255, 0, 0.05) 100%);
    pointer-events: none;
    z-index: 2;
  }

  /* Phosphor glow text - Stable version */
  .phosphor-text {
    color: #00ff41;
    text-shadow: 
      0 0 5px #00ff41,
      0 0 10px #00ff41,
      0 0 15px #00ff41;
    /* Removed aggressive flicker animation to fix page instability */
  }

  /* Terminal cursor */
  .terminal-cursor {
    background-color: #00ff41;
    animation: cursor-blink 1s infinite;
  }

  @keyframes cursor-blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0; }
  }

  /* Retro terminal border */
  .retro-border {
    border: 2px solid #333;
    border-top-color: #555;
    border-left-color: #555;
    box-shadow: 
      inset 1px 1px 0 #666,
      inset -1px -1px 0 #111;
  }

  /* Matrix-style typing effect */
  .matrix-text {
    overflow: hidden;
    white-space: nowrap;
    animation: matrix-type 2s steps(40, end);
  }

  @keyframes matrix-type {
    from { width: 0; }
    to { width: 100%; }
  }

  /* Boot sequence animation */
  .boot-sequence {
    animation: boot-fade 0.8s ease-in-out;
  }

  @keyframes boot-fade {
    0% { opacity: 0; transform: translateY(10px); }
    100% { opacity: 1; transform: translateY(0); }
  }

  /* Electric glow for primary elements */
  .electric-glow {
    box-shadow: 
      0 0 5px rgba(16, 185, 255, 0.5),
      0 0 10px rgba(16, 185, 255, 0.3),
      0 0 15px rgba(16, 185, 255, 0.2);
  }

  /* Terminal window styling */
  .terminal-window {
    background: linear-gradient(145deg, #0f0f0f, #1a1a1a);
    border: 1px solid #333;
    box-shadow: 
      0 4px 8px rgba(0, 0, 0, 0.6),
      inset 0 1px 0 rgba(255, 255, 255, 0.1);
  }

  /* Scanline effect for large screens */
  @media (min-width: 1024px) {
    .scanlines {
      position: relative;
    }
    
    .scanlines::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: repeating-linear-gradient(
        0deg,
        transparent,
        transparent 2px,
        rgba(0, 255, 0, 0.02) 2px,
        rgba(0, 255, 0, 0.02) 4px
      );
      pointer-events: none;
      z-index: 1000;
    }
  }

  /* Chat slide-in animation */
  @keyframes slide-in-right {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  .animate-slide-in-right {
    animation: slide-in-right 0.3s ease-out forwards;
  }

  /* Framer-style animations */
  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in-up {
    animation: fade-in-up 0.6s ease-out forwards;
    opacity: 0;
  }

  .animate-fade-in-up.delay-200 {
    animation-delay: 0.2s;
  }

  .animate-fade-in-up.delay-400 {
    animation-delay: 0.4s;
  }

  .animate-fade-in-up.delay-600 {
    animation-delay: 0.6s;
  }

  .animate-fade-in-up.delay-800 {
    animation-delay: 0.8s;
  }

  .animate-fade-in-up.delay-1000 {
    animation-delay: 1.0s;
  }

  .animate-fade-in-up.delay-1200 {
    animation-delay: 1.2s;
  }

  /* Gradient animation */
  @keyframes gradient {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  .animate-gradient {
    background-size: 200% 200%;
    animation: gradient 3s ease infinite;
  }

  /* Smooth hover transitions */
  .smooth-hover {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Terminal command line effect */
  .terminal-command {
    position: relative;
    overflow: hidden;
  }

  .terminal-command::before {
    content: ">";
    color: #00ff41;
    margin-right: 8px;
    font-weight: bold;
  }

  /* Linux CMD style arrows */
  .cmd-arrow {
    display: inline-flex;
    align-items: center;
    gap: 4px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .cmd-arrow:hover {
    transform: translateX(4px);
  }

  /* iOS command interface styling */
  .ios-command {
    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 
      0 8px 32px rgba(0, 0, 0, 0.1),
      inset 0 1px 0 rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(10px);
  }

  /* Linux terminal styling */
  .linux-terminal {
    background: #1e1e1e;
    border: 1px solid #333;
    box-shadow: 
      0 4px 8px rgba(0, 0, 0, 0.3),
      inset 0 1px 0 rgba(255, 255, 255, 0.1);
  }

  /* Command prompt styling */
  .command-prompt {
    font-family: 'Courier Prime', monospace;
    color: #00ff41;
    background: #000;
    padding: 8px 12px;
    border-radius: 4px;
    border-left: 3px solid #00ff41;
  }

  .command-prompt::before {
    content: "$ ";
    color: #00ff41;
    font-weight: bold;
  }

  /* Smooth scale animations */
  .scale-on-hover:hover {
    transform: scale(1.05);
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Glow effects for interactive elements */
  .glow-on-hover:hover {
    box-shadow: 
      0 0 20px rgba(59, 130, 246, 0.3),
      0 0 40px rgba(59, 130, 246, 0.1);
    transition: box-shadow 0.3s ease;
  }

  /* Terminal cursor blink */
  .terminal-cursor-blink {
    animation: cursor-blink 1s infinite;
  }

  @keyframes cursor-blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0; }
  }

  /* Command line typing effect */
  .typing-effect {
    overflow: hidden;
    white-space: nowrap;
    border-right: 2px solid #00ff41;
    animation: typing 2s steps(40, end), blink-caret 0.75s step-end infinite;
  }

  @keyframes typing {
    from { width: 0; }
    to { width: 100%; }
  }

  @keyframes blink-caret {
    from, to { border-color: transparent; }
    50% { border-color: #00ff41; }
  }
}